{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SAI TEJA IRRINKI \u00b6 To Visit my Profile click here My Profile","title":"Home"},{"location":"#sai-teja-irrinki","text":"To Visit my Profile click here My Profile","title":"SAI TEJA IRRINKI"},{"location":"about/","text":"About \u00b6 This is Saiteja Irrinki Working as Build & Release as a DevOps Engineer in Visualpath IT Services from Nov-2020 to TillDate. Experience in Configuration Management covering Build Management, Version Control, CodeQuality, Environment Administration, Defect Tracking, Release Management, Merging Strategies, Continous Integration and Continous Delivery, Cloud Computing, Container Orchestration, Scripting for Automation, Static Web Development, Orchestration, Technologies and Operating Systems \u2013 Linux, Windows. +91-9493322788 saitejairrinki91@gmail.com","title":"About"},{"location":"about/#about","text":"This is Saiteja Irrinki Working as Build & Release as a DevOps Engineer in Visualpath IT Services from Nov-2020 to TillDate. Experience in Configuration Management covering Build Management, Version Control, CodeQuality, Environment Administration, Defect Tracking, Release Management, Merging Strategies, Continous Integration and Continous Delivery, Cloud Computing, Container Orchestration, Scripting for Automation, Static Web Development, Orchestration, Technologies and Operating Systems \u2013 Linux, Windows. +91-9493322788 saitejairrinki91@gmail.com","title":"About"},{"location":"code/","text":"Code Example \u00b6 PHP \u00b6 class App { /** * @var string */ private $name; public __construct($name) { $this->name = $name; } } C \u00b6 public class App { private string Name { get ; set ;} public App ( string name ) { this . Name = name ; } } Json \u00b6 { \"result\" : \"success\" } Bash \u00b6 curl -H 'Content-type: application/json' http://localhost:8080/api/ vi /etc/resolvconf/resolv.conf.d/head C C++ #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Code Example"},{"location":"code/#code-example","text":"","title":"Code Example"},{"location":"code/#php","text":"class App { /** * @var string */ private $name; public __construct($name) { $this->name = $name; } }","title":"PHP"},{"location":"code/#c","text":"public class App { private string Name { get ; set ;} public App ( string name ) { this . Name = name ; } }","title":"C"},{"location":"code/#json","text":"{ \"result\" : \"success\" }","title":"Json"},{"location":"code/#bash","text":"curl -H 'Content-type: application/json' http://localhost:8080/api/ vi /etc/resolvconf/resolv.conf.d/head C C++ #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Bash"},{"location":"guide/","text":"Getting started \u00b6 Material for MkDocs is a theme for MkDocs , a static site generator geared towards (technical) project documentation. If you're familiar with Python, you can install Material for MkDocs with pip , the Python package manager. If not, we recommended using docker . Installation \u00b6 with pip recommended \u00b6 Material for MkDocs can be installed with pip : pip install mkdocs-material This will automatically install compatible versions of all dependencies: MkDocs , Markdown , Pygments and Python Markdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Docker \u00b6 with docker \u00b6 The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. If you're not familiar with Docker don't worry, we have you covered in the following sections. The following plugins are bundled with the Docker image: mkdocs-minify-plugin mkdocs-redirects How to add plugins to the Docker image? Material for MkDocs bundles useful and common plugins while trying not to blow up the size of the official image. If the plugin you want to use is not included, create a new Dockerfile and extend the official Docker image with your custom installation routine: FROM squidfunk/mkdocs-material RUN pip install ... Next, you can build the image with the following command: docker build -t squidfunk/mkdocs-material . The new image can be used exactly like the official image. Apple Silicon (M1) and Raspberry Pi The official Docker image is only available for linux/amd64 . We recommend the third-party image by @afritzler if you want to run Material for MkDocs via Docker on arm64 or armv7 , as it is automatically built on every release: docker pull ghcr.io/afritzler/mkdocs-material GIT \u00b6 with git \u00b6 Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material . When cloning from git , you must install all required dependencies yourself: pip install -e mkdocs-material","title":"Getting started"},{"location":"guide/#getting-started","text":"Material for MkDocs is a theme for MkDocs , a static site generator geared towards (technical) project documentation. If you're familiar with Python, you can install Material for MkDocs with pip , the Python package manager. If not, we recommended using docker .","title":"Getting started"},{"location":"guide/#installation","text":"","title":"Installation"},{"location":"guide/#with-pip","text":"Material for MkDocs can be installed with pip : pip install mkdocs-material This will automatically install compatible versions of all dependencies: MkDocs , Markdown , Pygments and Python Markdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately.","title":"with pip"},{"location":"guide/#docker","text":"","title":"Docker"},{"location":"guide/#with-docker","text":"The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. If you're not familiar with Docker don't worry, we have you covered in the following sections. The following plugins are bundled with the Docker image: mkdocs-minify-plugin mkdocs-redirects How to add plugins to the Docker image? Material for MkDocs bundles useful and common plugins while trying not to blow up the size of the official image. If the plugin you want to use is not included, create a new Dockerfile and extend the official Docker image with your custom installation routine: FROM squidfunk/mkdocs-material RUN pip install ... Next, you can build the image with the following command: docker build -t squidfunk/mkdocs-material . The new image can be used exactly like the official image. Apple Silicon (M1) and Raspberry Pi The official Docker image is only available for linux/amd64 . We recommend the third-party image by @afritzler if you want to run Material for MkDocs via Docker on arm64 or armv7 , as it is automatically built on every release: docker pull ghcr.io/afritzler/mkdocs-material","title":"with docker"},{"location":"guide/#git","text":"","title":"GIT"},{"location":"guide/#with-git","text":"Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material . When cloning from git , you must install all required dependencies yourself: pip install -e mkdocs-material","title":"with git"},{"location":"job_roles/","text":"DevOps ENGINEER ROLES \u00b6 AWS Tasks: \u00b6 Managing Ec2 Instances, EIP, Network Interfaces, Security Groups & Key Pairs Managing EBS Volumes, AMI & Snapshots (Backup & Restore, Migration etc) Setup & Managing Elastic Load Balancers, ACM & Autoscaling Groups Setting & Managing Cloudwatch Alarms on metrics from Ec2, ELB & RDS Creating & Managing RDS Instances, RDS Snapshots, Updating Parameters Groups AWS CLI for any AWS Tasks Cloud Migration using Lift & Shift Strategy on AWS, Services using \u00b6 VPC, Ec2, S3, Application Load Balancer, Route53 & CloudFront CDN IAM to give secure access to AWS account using MFA Tightly controlled Security Group for firewall rules of EC2 EBS volume for storage on Ec2, Snapshot for Backups of EBS Autoscaling for Automatic scaling of Ec2 instance based on CPU usage Modernization on AWS Cloud, Services used Beanstalk for PAAS for Tomcat Web App RDS for MySQL Database, Object storage S3 to store and retrieve files Route53 for Private & Public Hosted zones/Records Amazon MQ for fully managed RabbitMQ, ElastiCache for in memory datastore in cloud, Monitoring with CloudWatch, Notification using SNS, CloudFront for Content Delivery network AWS Cloud Automation using \u00b6 Ansible CloudFormation (Stacks) AWS Securities \u00b6 Inspector & Best practices IAM management Continuous Delivery of Java Web Application \u00b6 CICD Pipeline using Jenkins, Git, Maven, Nexus ,S3 & SonarQube Deploying Artifact to Beanstalk from Jenkins Jenkins Pipeline As A Code for CICD Jenkins Master/Slave setup Continuous Delivery on AWS Cloud using \u00b6 AWS Code Commit, Code Build & Code pipeline Configuration Management using Ansible \u00b6 Ansible AdHoc commands to execute remote tasks Ansible playbook for Service/Server Deployments Ansible playbook to setup VPC & Bastion Host on AWS Writing our own configuration file (ansible.cfg) Ansible Roles for modular & reusable automation framework Docker Containers \u00b6 Building customized docker images using Dockerfile Docker-compose to define & run MultiContainer Docker Application Kubernetes \u00b6 Creating Production grade K8s cluster using Kops Hosting Containerized Application on K8s cluster using Pod, Service, Replication Controller, Deployment, Secrets & ConfigMap MkDocs \u00b6 Designing and Building a Static Website using MkDocs","title":"Job Roles"},{"location":"job_roles/#devops-engineer-roles","text":"","title":"DevOps ENGINEER ROLES"},{"location":"job_roles/#aws-tasks","text":"Managing Ec2 Instances, EIP, Network Interfaces, Security Groups & Key Pairs Managing EBS Volumes, AMI & Snapshots (Backup & Restore, Migration etc) Setup & Managing Elastic Load Balancers, ACM & Autoscaling Groups Setting & Managing Cloudwatch Alarms on metrics from Ec2, ELB & RDS Creating & Managing RDS Instances, RDS Snapshots, Updating Parameters Groups AWS CLI for any AWS Tasks","title":"AWS Tasks:"},{"location":"job_roles/#cloud-migration-using-lift-shift-strategy-on-aws-services-using","text":"VPC, Ec2, S3, Application Load Balancer, Route53 & CloudFront CDN IAM to give secure access to AWS account using MFA Tightly controlled Security Group for firewall rules of EC2 EBS volume for storage on Ec2, Snapshot for Backups of EBS Autoscaling for Automatic scaling of Ec2 instance based on CPU usage Modernization on AWS Cloud, Services used Beanstalk for PAAS for Tomcat Web App RDS for MySQL Database, Object storage S3 to store and retrieve files Route53 for Private & Public Hosted zones/Records Amazon MQ for fully managed RabbitMQ, ElastiCache for in memory datastore in cloud, Monitoring with CloudWatch, Notification using SNS, CloudFront for Content Delivery network","title":"Cloud Migration using Lift &amp; Shift Strategy on AWS, Services using"},{"location":"job_roles/#aws-cloud-automation-using","text":"Ansible CloudFormation (Stacks)","title":"AWS Cloud Automation using "},{"location":"job_roles/#aws-securities","text":"Inspector & Best practices IAM management","title":"AWS Securities"},{"location":"job_roles/#continuous-delivery-of-java-web-application","text":"CICD Pipeline using Jenkins, Git, Maven, Nexus ,S3 & SonarQube Deploying Artifact to Beanstalk from Jenkins Jenkins Pipeline As A Code for CICD Jenkins Master/Slave setup","title":"Continuous Delivery of Java Web Application  "},{"location":"job_roles/#continuous-delivery-on-aws-cloud-using","text":"AWS Code Commit, Code Build & Code pipeline","title":"Continuous Delivery on AWS Cloud using"},{"location":"job_roles/#configuration-management-using-ansible","text":"Ansible AdHoc commands to execute remote tasks Ansible playbook for Service/Server Deployments Ansible playbook to setup VPC & Bastion Host on AWS Writing our own configuration file (ansible.cfg) Ansible Roles for modular & reusable automation framework","title":"Configuration Management using Ansible "},{"location":"job_roles/#docker-containers","text":"Building customized docker images using Dockerfile Docker-compose to define & run MultiContainer Docker Application","title":"Docker Containers "},{"location":"job_roles/#kubernetes","text":"Creating Production grade K8s cluster using Kops Hosting Containerized Application on K8s cluster using Pod, Service, Replication Controller, Deployment, Secrets & ConfigMap","title":"Kubernetes "},{"location":"job_roles/#mkdocs","text":"Designing and Building a Static Website using MkDocs","title":"MkDocs"},{"location":"profile_summary/","text":"PROFILESUMMARY \u00b6 Around 1 year of experience in IT area comprising of configuration management, Deploy, CI/CD pipeline, AWS and DevOps methodologies. Expertise in troubleshooting the problems generated while building and deploying. Working Experience on Git, GitHub, Jenkins. Debugging issues if there is any failure in broken Jenkins build and maintaining Jenkins build pipeline. Expertise Knowledge in Source Code Management (version control system) tools using GIT. Experienced on Branching, Merging, and Tagging concepts in Version Control tool like GIT. Proficient in developing Continuous Integration / Continuous Delivery pipelines. Experience on containerization tools like Docker. Implemented Docker based Continues Integration and Deployment framework. Strong experience on build tools and packaging the source code using Maven. Scheduled builds overnight to support development needs using Jenkins, Git, and Maven. Experience in integrating Unit Tests and Code Quality Analysis Tools like SonarQube. Experience in using Nexus Repository Manager for Maven builds. Experience in orchestration tools like Kubernetes. Experience with services IAM, Compute Engine, Kubernetes Engine, Storage Buckets, VPC Network, and Pub Sub. Experience with Amazon Web services Creating, configuring and Managing EC2, Storage, IAM, S3, VPC, ELB, ECR, EKS, SNS, Route53 services in AWS. Experience in using Apache Tomcat & Red Hat Server application servers for deployments. Working experience on operating systems like Linux, Windows. Performed continuous Build and Deployments to multiple DEV, QA, PRE-Prod and PROD environments. Have knowledge in Shell Scripting, Google Cloud Platform. Ability to learn new skills quickly. ACADEMIC DETAILS \u00b6 B.Tech PROFESSIONAL \u00b6 Working as a DevOps Engineer at Visualpath IT Services Pvt Ltd from November 2020 to till now. STRENGTHS \u00b6 Flexibility and Adaptability to work in any environment Good Troubleshooting skills Willingness to accept any challenge irrespective of its complexity Good team player with positive attitude","title":"profile"},{"location":"profile_summary/#profilesummary","text":"Around 1 year of experience in IT area comprising of configuration management, Deploy, CI/CD pipeline, AWS and DevOps methodologies. Expertise in troubleshooting the problems generated while building and deploying. Working Experience on Git, GitHub, Jenkins. Debugging issues if there is any failure in broken Jenkins build and maintaining Jenkins build pipeline. Expertise Knowledge in Source Code Management (version control system) tools using GIT. Experienced on Branching, Merging, and Tagging concepts in Version Control tool like GIT. Proficient in developing Continuous Integration / Continuous Delivery pipelines. Experience on containerization tools like Docker. Implemented Docker based Continues Integration and Deployment framework. Strong experience on build tools and packaging the source code using Maven. Scheduled builds overnight to support development needs using Jenkins, Git, and Maven. Experience in integrating Unit Tests and Code Quality Analysis Tools like SonarQube. Experience in using Nexus Repository Manager for Maven builds. Experience in orchestration tools like Kubernetes. Experience with services IAM, Compute Engine, Kubernetes Engine, Storage Buckets, VPC Network, and Pub Sub. Experience with Amazon Web services Creating, configuring and Managing EC2, Storage, IAM, S3, VPC, ELB, ECR, EKS, SNS, Route53 services in AWS. Experience in using Apache Tomcat & Red Hat Server application servers for deployments. Working experience on operating systems like Linux, Windows. Performed continuous Build and Deployments to multiple DEV, QA, PRE-Prod and PROD environments. Have knowledge in Shell Scripting, Google Cloud Platform. Ability to learn new skills quickly.","title":"PROFILESUMMARY"},{"location":"profile_summary/#academic-details","text":"B.Tech","title":"ACADEMIC DETAILS"},{"location":"profile_summary/#professional","text":"Working as a DevOps Engineer at Visualpath IT Services Pvt Ltd from November 2020 to till now.","title":"PROFESSIONAL"},{"location":"profile_summary/#strengths","text":"Flexibility and Adaptability to work in any environment Good Troubleshooting skills Willingness to accept any challenge irrespective of its complexity Good team player with positive attitude","title":"STRENGTHS"},{"location":"project/","text":"PROJECT 1 \u00b6 Name: Vprofile \u00b6 Duration: 2-Months \u00b6 Role: DevOps \u00b6 Environment : Git, GitHub, Maven, Apache Tomcat, Jenkins, Linux, SonarQube, Nexus, AWS, Ansible. \u00b6 Roles and Responsibilities : \u00b6 Configured Git with Jenkins and schedule jobs using POLL SCM option Installed and configured GIT and communicating with the repositories in GITHUB. Collaborate with different teams to deploy application code into Dev, QA, and Staging. Installing and updating the Jenkins plug-ins to achieve CI/CD. Responsible for installing Jenkins master and slave nodes. Created Jenkins CICD pipelines for continuous build & deployment and integrated Junit and SonarQube plugins in Jenkins for automated testing and for Code quality check. Integrated SonarQube with Jenkins for continuous inspection of code quality and analysis with SonarQube scanner for Maven. Managed Sonatype Nexus repositories to download the artifacts (jar, war & ear) during the build Wrote playbook manifests for deploying, configuring, and managing components. Managing the working environments through configuration management tools ansible. Working with developers and Testers to test the source code and applications through Jenkins plug-ins. Installation of apache, tomcat and troubleshooting web server issues. Proficient in deployment of WAR and EAR files in profiles and clustered environments. Administration and maintenance of servers using Red Hat Linux/Cento\u2019s 6 and 7. Installing and configuration of ansible server. * Implemented AWS solutions using EC2,S3,EBS,ELB, Route53, Auto scaling groups Built servers using AWS, importing volumes, launching EC2, creating Security groups, Auto- scaling, Load balancers (ELBs) using Cloud formation templates & AMI's using Infrastructure as a Service (IaaS). * Designed, built, and deployed a multitude application utilizing almost all the AWS stack (Including EC2, S3), focusing on high-availability, fault tolerance, and auto-scaling. * Configured ELB with different launch configurations using AMI and EC2 Autoscaling groups * Creating S3 buckets and S3 life cycle policies and bucket policies (Read/Write) * Creating EBS Volumes and snapshots and attaching to the EC2 instances PROJECT 2 \u00b6 Name: Emartin \u00b6 Duration : 3-Months \u00b6 Environment : Git, GitHub, Maven, Nexus, SonarQube, Jenkins, Docker, Kubernetes, AWS, Linux. \u00b6 Roles and Responsibilities : \u00b6 Involved in CI/CD process and integrated GIT, Nexus, SonarQube, Maven artifacts build with Jenkins and creating Docker image and using the Docker image to deploy over EKS (Kubernetes). Building and deploying various micro services in EKS. Creating and maintaining namespaces, configmaps, secrets, service, ingress, rbac in kubernetes. Implemented and maintained the Branching and build/ release strategies utilizing GIT. Experience with container-based deployments using Docker, working with Dockerimages, Docker Hub and Docker-registries and Kubernetes. Building/Maintaining Docker container clusters managed by Kubernetes Linux, Bash, GIT, Docker. Implemented docker-maven-plugin in maven pom to build docker images for all micro services and later used Docker file to build the docker images from the java jar files. Utilized Kubernetes for the runtime environment of the CI/CD system to build, test deploy. Experience in working on AWS and its services like AWS IAM, VPC, EC2, EKS, EBS, S3, ELB, Auto Scaling, Route 53, Cloud Front, Cloud Watch, Cloud Trail, and SNS. Experienced in Cloud automation using AWS Cloud Formation templates to create custom sized VPC, subnets, NAT, EC2 instances, ELB and Security groups. Experienced in creating complex IAM policies, Roles and user management for delegated access within AWS Identify, troubleshoot and resolve issues related to build and deploy process. Deploying Docker images in Kubernetes cluster using Yaml files and exposing the application to internet using service object.","title":"Projects"},{"location":"project/#project-1","text":"","title":"PROJECT 1"},{"location":"project/#name-vprofile","text":"","title":"Name: Vprofile"},{"location":"project/#duration-2-months","text":"","title":"Duration: 2-Months"},{"location":"project/#role-devops","text":"","title":"Role: DevOps"},{"location":"project/#environment-git-github-maven-apache-tomcat-jenkins-linux-sonarqube-nexus-aws-ansible","text":"","title":"Environment : Git, GitHub, Maven, Apache Tomcat, Jenkins, Linux, SonarQube, Nexus, AWS, Ansible."},{"location":"project/#roles-and-responsibilities","text":"Configured Git with Jenkins and schedule jobs using POLL SCM option Installed and configured GIT and communicating with the repositories in GITHUB. Collaborate with different teams to deploy application code into Dev, QA, and Staging. Installing and updating the Jenkins plug-ins to achieve CI/CD. Responsible for installing Jenkins master and slave nodes. Created Jenkins CICD pipelines for continuous build & deployment and integrated Junit and SonarQube plugins in Jenkins for automated testing and for Code quality check. Integrated SonarQube with Jenkins for continuous inspection of code quality and analysis with SonarQube scanner for Maven. Managed Sonatype Nexus repositories to download the artifacts (jar, war & ear) during the build Wrote playbook manifests for deploying, configuring, and managing components. Managing the working environments through configuration management tools ansible. Working with developers and Testers to test the source code and applications through Jenkins plug-ins. Installation of apache, tomcat and troubleshooting web server issues. Proficient in deployment of WAR and EAR files in profiles and clustered environments. Administration and maintenance of servers using Red Hat Linux/Cento\u2019s 6 and 7. Installing and configuration of ansible server. * Implemented AWS solutions using EC2,S3,EBS,ELB, Route53, Auto scaling groups Built servers using AWS, importing volumes, launching EC2, creating Security groups, Auto- scaling, Load balancers (ELBs) using Cloud formation templates & AMI's using Infrastructure as a Service (IaaS). * Designed, built, and deployed a multitude application utilizing almost all the AWS stack (Including EC2, S3), focusing on high-availability, fault tolerance, and auto-scaling. * Configured ELB with different launch configurations using AMI and EC2 Autoscaling groups * Creating S3 buckets and S3 life cycle policies and bucket policies (Read/Write) * Creating EBS Volumes and snapshots and attaching to the EC2 instances","title":"Roles and Responsibilities :"},{"location":"project/#project-2","text":"","title":"PROJECT 2"},{"location":"project/#name-emartin","text":"","title":"Name: Emartin"},{"location":"project/#duration-3-months","text":"","title":"Duration : 3-Months"},{"location":"project/#environment-git-github-maven-nexus-sonarqube-jenkins-docker-kubernetes-aws-linux","text":"","title":"Environment : Git, GitHub, Maven, Nexus, SonarQube, Jenkins, Docker, Kubernetes, AWS, Linux."},{"location":"project/#roles-and-responsibilities_1","text":"Involved in CI/CD process and integrated GIT, Nexus, SonarQube, Maven artifacts build with Jenkins and creating Docker image and using the Docker image to deploy over EKS (Kubernetes). Building and deploying various micro services in EKS. Creating and maintaining namespaces, configmaps, secrets, service, ingress, rbac in kubernetes. Implemented and maintained the Branching and build/ release strategies utilizing GIT. Experience with container-based deployments using Docker, working with Dockerimages, Docker Hub and Docker-registries and Kubernetes. Building/Maintaining Docker container clusters managed by Kubernetes Linux, Bash, GIT, Docker. Implemented docker-maven-plugin in maven pom to build docker images for all micro services and later used Docker file to build the docker images from the java jar files. Utilized Kubernetes for the runtime environment of the CI/CD system to build, test deploy. Experience in working on AWS and its services like AWS IAM, VPC, EC2, EKS, EBS, S3, ELB, Auto Scaling, Route 53, Cloud Front, Cloud Watch, Cloud Trail, and SNS. Experienced in Cloud automation using AWS Cloud Formation templates to create custom sized VPC, subnets, NAT, EC2 instances, ELB and Security groups. Experienced in creating complex IAM policies, Roles and user management for delegated access within AWS Identify, troubleshoot and resolve issues related to build and deploy process. Deploying Docker images in Kubernetes cluster using Yaml files and exposing the application to internet using service object.","title":"Roles and Responsibilities :"},{"location":"resume/","text":"To view my Resume Click here Resume","title":"Resume"},{"location":"technical_skills/","text":"TECHNICAL SKILLS \u00b6 Category Tools Technologies & Softwares Operating Systems - Linux Windows Virtualization - Vagrant Scripting Languages - Shell Scripting, Python Containerization Tools - Docker Kubernetes Configuration Management Tool - Ansible Cloud Platform - Amazon Web Services Version Control Tool - GIT Build Software - Maven Continuous Integration Tool - Jenkins Web/App Server - Apache Tomcat Static Web Development - MkDocs Databases - RDS MySQL","title":"skills"},{"location":"technical_skills/#technical-skills","text":"Category Tools Technologies & Softwares Operating Systems - Linux Windows Virtualization - Vagrant Scripting Languages - Shell Scripting, Python Containerization Tools - Docker Kubernetes Configuration Management Tool - Ansible Cloud Platform - Amazon Web Services Version Control Tool - GIT Build Software - Maven Continuous Integration Tool - Jenkins Web/App Server - Apache Tomcat Static Web Development - MkDocs Databases - RDS MySQL","title":"TECHNICAL SKILLS"},{"location":"test/","text":"Tables \u00b6 number name Role 00 saiteja DevOps Engineeer Number Notebook Data/Model Exercises & Extra-curriculum Slides 00 TensorFlow Fundamentals Go to exercises & extra-curriculum Go to slides 01 TensorFlow Regression Go to exercises & extra-curriculum Go to slides 02 TensorFlow Classification Go to exercises & extra-curriculum Go to slides Admonitions \u00b6 Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Method Description GET Fetch resource PUT Update resource DELETE Delete resource Buttons \u00b6 Send Subscribe to our newsletter Subscribe to our newsletter Formatting Text \u00b6 Text can be {--deleted--} and replacement text {++added++}. This can also be combined into { one~>a single } operation. { Highlighting } is also possible {>>and comments can be added inline<<}. {== Formatting can also be applied to blocks by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. ==} This was marked This was inserted This was deleted H 2 0 A T A Ctrl + Alt + Del Icons & Emojis \u00b6 \u2013 material/account-circle.svg \u2013 fontawesome/regular/laugh-wink.svg \u2013 octicons/repo-push-16.svg \u2013 Medium \u2013 Twitter \u2013 Facebook :fontawesome-brands-note: :fontawesome-brands-cloud: :fontawesome-brands-laptop: List \u00b6 Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Tags \u00b6 tags: - insiders - brand new ... Multiple-Code \u00b6 C C++ #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Test"},{"location":"test/#tables","text":"number name Role 00 saiteja DevOps Engineeer Number Notebook Data/Model Exercises & Extra-curriculum Slides 00 TensorFlow Fundamentals Go to exercises & extra-curriculum Go to slides 01 TensorFlow Regression Go to exercises & extra-curriculum Go to slides 02 TensorFlow Classification Go to exercises & extra-curriculum Go to slides","title":"Tables"},{"location":"test/#admonitions","text":"Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"Admonitions"},{"location":"test/#buttons","text":"Send Subscribe to our newsletter Subscribe to our newsletter","title":"Buttons"},{"location":"test/#formatting-text","text":"Text can be {--deleted--} and replacement text {++added++}. This can also be combined into { one~>a single } operation. { Highlighting } is also possible {>>and comments can be added inline<<}. {== Formatting can also be applied to blocks by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. ==} This was marked This was inserted This was deleted H 2 0 A T A Ctrl + Alt + Del","title":"Formatting Text"},{"location":"test/#icons-emojis","text":"\u2013 material/account-circle.svg \u2013 fontawesome/regular/laugh-wink.svg \u2013 octicons/repo-push-16.svg \u2013 Medium \u2013 Twitter \u2013 Facebook :fontawesome-brands-note: :fontawesome-brands-cloud: :fontawesome-brands-laptop:","title":"Icons &amp; Emojis"},{"location":"test/#list","text":"Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"List"},{"location":"test/#tags","text":"tags: - insiders - brand new ...","title":"Tags"},{"location":"test/#multiple-code","text":"C C++ #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Multiple-Code"}]}