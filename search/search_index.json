{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Decoding DevOps \u00b6 For full documentation visit Decoding DevOps","title":"Home"},{"location":"#decoding-devops","text":"For full documentation visit Decoding DevOps","title":"Decoding DevOps"},{"location":"ansible/","text":"Ansible \u00b6 Installing Ansible Ubuntu sudo apt update sudo apt install software-properties-common sudo add-apt-repository --yes --update ppa:ansible/ansible sudo apt install ansible ansible --version CentOS sudo yum install epel-release sudo yum install ansible ansible --version Sample Inventory File \u00b6 Inventory ##Host Level webserver01 ansible_host =< Private IP > webserver02 ansible_host =< Private IP > webserver03 ansible_host =< Private IP > dbserver01 ansible_host =< Private IP > dbserver02 ansible_host =< Private IP > ansible_user = ubuntu ##Group Level [ Group1 ] webserverserver01 webserverserver02 webserverserver03 [ Group2 ] dbserver01 dbserver02 ##Parent Level [ dc_mumbai : children ] webservergrp dbsrvgrp ##Variables [ dc_mumbai : vars ] ansible_user =< user > ansible_ssh_private_key_file =< key - path > Info Host level has the Highest priority , If you mention anything like username or Keyfile etc. It will take only which are mentioned in the host level. Ansible Commands \u00b6 To test the connection of particular Remote Machine ansible -i <Inventoryfile path> -m ping <hostname> To test the connection of particular Group of Remote Machines ansible -i <Inventoryfile path> -m ping <Groupname> To test the connection of All Remote Machine ansible -i <Inventoryfile path> -m ping all To see details about the machine ansible -i <Inventoryfile path> -m setup <hostname> Ad hoc Commands Some Example Ad hoc Commands \u00b6 Copy files to Remote machines name starts with web ansible -i <Inventoryfile path> -m copy -a \"src=index,html dest=/var/www/html/index.html\" 'web*' --become Installing httpd in centos Remote machine ansible -i <Inventoryfile path> -m yum -a \"name=httpd state=present\" websrvgrp --become Start & Enable httpd in centos Remote machine ansible -i <Inventoryfile path> -m service -a \"name=httpd state=started enabled=yes\" websrvgrp --become Sample Ansible Playbooks \u00b6 Info Ansible Playbooks should be with .yml or .yaml Extension for example vim sample.yml Playbook For Creating Files & Directories - name : Creating Files & Directories hosts : <host> become : yes tasks : - name : Creating a Directory file : path : /tmp/welcome state : directory - name : Creating a File file : path : /tmp/sample.txt state : touch To Execute the playbook ansible-playbook -i <Inventory file path> sample.yml Ansible Configuration File \u00b6 vim ansible.cfg Ansible Configuration File [ defaults ] host_key_checking = False inventory = <Inventory File Path> timeout = 20 log_path = /var/log/ansible-hbadger.log forks = 5 remote_port = 22 remote_user = <username> [ privilege_escalation ] become = True become_method = sudo become_user = root become_ask_pass = False","title":"Ansible"},{"location":"ansible/#ansible","text":"Installing Ansible Ubuntu sudo apt update sudo apt install software-properties-common sudo add-apt-repository --yes --update ppa:ansible/ansible sudo apt install ansible ansible --version CentOS sudo yum install epel-release sudo yum install ansible ansible --version","title":"Ansible"},{"location":"ansible/#sample-inventory-file","text":"Inventory ##Host Level webserver01 ansible_host =< Private IP > webserver02 ansible_host =< Private IP > webserver03 ansible_host =< Private IP > dbserver01 ansible_host =< Private IP > dbserver02 ansible_host =< Private IP > ansible_user = ubuntu ##Group Level [ Group1 ] webserverserver01 webserverserver02 webserverserver03 [ Group2 ] dbserver01 dbserver02 ##Parent Level [ dc_mumbai : children ] webservergrp dbsrvgrp ##Variables [ dc_mumbai : vars ] ansible_user =< user > ansible_ssh_private_key_file =< key - path > Info Host level has the Highest priority , If you mention anything like username or Keyfile etc. It will take only which are mentioned in the host level.","title":"Sample Inventory File"},{"location":"ansible/#ansible-commands","text":"To test the connection of particular Remote Machine ansible -i <Inventoryfile path> -m ping <hostname> To test the connection of particular Group of Remote Machines ansible -i <Inventoryfile path> -m ping <Groupname> To test the connection of All Remote Machine ansible -i <Inventoryfile path> -m ping all To see details about the machine ansible -i <Inventoryfile path> -m setup <hostname> Ad hoc Commands","title":"Ansible Commands"},{"location":"ansible/#some-example-ad-hoc-commands","text":"Copy files to Remote machines name starts with web ansible -i <Inventoryfile path> -m copy -a \"src=index,html dest=/var/www/html/index.html\" 'web*' --become Installing httpd in centos Remote machine ansible -i <Inventoryfile path> -m yum -a \"name=httpd state=present\" websrvgrp --become Start & Enable httpd in centos Remote machine ansible -i <Inventoryfile path> -m service -a \"name=httpd state=started enabled=yes\" websrvgrp --become","title":"Some Example Ad hoc Commands"},{"location":"ansible/#sample-ansible-playbooks","text":"Info Ansible Playbooks should be with .yml or .yaml Extension for example vim sample.yml Playbook For Creating Files & Directories - name : Creating Files & Directories hosts : <host> become : yes tasks : - name : Creating a Directory file : path : /tmp/welcome state : directory - name : Creating a File file : path : /tmp/sample.txt state : touch To Execute the playbook ansible-playbook -i <Inventory file path> sample.yml","title":"Sample Ansible Playbooks"},{"location":"ansible/#ansible-configuration-file","text":"vim ansible.cfg Ansible Configuration File [ defaults ] host_key_checking = False inventory = <Inventory File Path> timeout = 20 log_path = /var/log/ansible-hbadger.log forks = 5 remote_port = 22 remote_user = <username> [ privilege_escalation ] become = True become_method = sudo become_user = root become_ask_pass = False","title":"Ansible Configuration File"},{"location":"aws-cli/","text":"AWS CLI (Command Line Interface) \u00b6 Setting up IAM user \u00b6 Creating User with Access-key \u00b6 Set permissions & Attaching Policies \u00b6 Installing AWS-CLI \u00b6 sudo -i sudo apt update apt install awscli -y Configure AWS CLI with IAM user Credentials with specific Region \u00b6 aws configure Once it is done try some aws cli commands like aws s3 ls If u have any buckets in your s3 it will list EC2 \u2013 Elastic Compute Cloud \u00b6 Create a key pair \u00b6 aws ec2 create-key-pair --key-name <keypair-Name> --query 'KeyMaterial' --output text > <keypair-Name.pem> Delete a key pair \u00b6 To delete a key pair, run the aws ec2 delete-key-pair command, substituting MyKeyPair with the name of the pair to delete. aws ec2 delete-key-pair --key-name <keypair-Name> Create a Security Group & Adding Inbound rules \u00b6 aws ec2 create-security-group --group-name <security grp Name> --description \"<Description>\" curl https://checkip.amazonaws.com aws ec2 authorize-security-group-ingress --group-id <security group Id> --protocol tcp --port <port Number> --cidr <ip address> aws ec2 authorize-security-group-ingress --group-id <security grp Id>--protocol tcp --port 22 -8000 --cidr 0 .0.0.0/0 To view the initial information for my-sg, run the aws ec2 describe-security-groups command. For an EC2-Classic security group, you can reference it by its name. aws ec2 describe-security-groups --group-names <security grp Name> Delete your security group \u00b6 The following command example deletes the EC2-Classic security group named. aws ec2 delete-security-group --group-name <security grp Name> Launch Instance \u00b6 You can use the following command to launch a t2.micro instance in EC2-Classic. Replace the italicized parameter values with your own. You can get the ami Id\u2019s from documentation or console for your required Instance. aws ec2 run-instances --image-id <ami-Id> --count 1 --instance-type <type> --key-name <keypair-Name> --security-groups <security grp Name> Add a tag to your Instance \u00b6 aws ec2 create-tags --resources <Instance-Id>--tags Key = Name,Value = <value> Terminate your Instance \u00b6 To delete an instance, you use the command aws ec2 terminate-instances to delete it. aws ec2 terminate-instances --instance-ids <Instance-Id> Create Launch Template \u00b6 aws ec2 create-launch-template --launch-template-name <Name> \":[{\" AssociatePublicIpAddress \":true,\" DeviceIndex \":0,\" Ipv6AddressCount \":1,\" SubnetId \":\" pe \":\" <Instance type \",\" TagSpecifications \":[{\" ResourceType \":\" instance \",\" Tags \":[{\" Key \":\" Name \",\" Value \":\" <value> \"}]}]}' Delete Launch Template \u00b6 aws ec2 delete-launch-template --launch-template-id < template id> --region <region> Creating Auto-Scaling group \u00b6 aws autoscaling create-auto-scaling-group --auto-scaling-group-name <Name> --launch-LaunchTemplateId = <template \u2013 id > --min-size 2 --max-size 5 --vpc-zone-identifier \"subnet1-id,subnet2-id,subnet3-id\" Delete your Auto-Scaling Group \u00b6 aws autoscaling delete-auto-scaling-group --auto-scaling-group-name < Auto -Scaling group Name > EBS \u2013 Elastic Block Storage \u00b6 Create EBS Volume \u00b6 To create an empty General Purpose SSD (gp2) volume aws ec2 create-volume --volume-type <volume type> --size <size in number> --availability-zone <zone> To create an encrypted volume \u00b6 aws ec2 create-volume --volume-type <volume type> --size <size in number> --encrypted --availability-zone <zone> To create a volume with tags \u00b6 aws ec2 create-tags --resources <volume-id> --tags Key = Name,Value = <value> To Delete a Volume \u00b6 aws ec2 delete-volume --volume-id <volume Id> Output Output: None To create a snapshot \u00b6 This example command creates a snapshot of the volume with a volume ID of and a short description to identify the snapshot. aws ec2 create-snapshot --volume-id <volume Id> --description \"<Description>\" To create a snapshot with tags \u00b6 aws ec2 create-snapshot --volume-id <volume Id> --description 'Prod backup' --tag-specifications 'ResourceType=snapshot,Tags=[{Key=Name,Value=<value>},{Key=Database,Value=Mysql}]' To allocate an Elastic IP address for EC2-Classic \u00b6 The following allocate-address example allocates an Elastic IP address to use with an instance in EC2-Classic. aws ec2 allocate-address ELB \u2013 Elastic Load Balancer \u00b6 Create-load-balancer \u00b6 To create an Application load balancer \u00b6 The below commands to find subnet id & Instance Id aws ec2 describe-subnets aws ec2 describe-instances aws elbv2 create-load-balancer --name <Load balancer Name>--type <type> --subnets <subnet-Id> <subnet-Id> To create an Network load balancer \u00b6 aws elbv2 create-load-balancer --name <Load balancer Name>--type <type> --subnets <subnet-Id> To register instances with a load balancer \u00b6 aws elb register-instances-with-load-balancer --load-balancer-name <Load balancer Name> --instances <Instance-Id> To Delete a Specific Load balancer \u00b6 aws elbv2 delete-load-balancer --load-balancer-arn <arn end point> RDS - Relational Database Service \u00b6 Create-db-Instance \u00b6 aws rds create-db-instance --db-instance-identifier <db - Name> --db-instance-class <db.type> --engine <Database Engine> --master-username <username> --master-user-password <password> --allocated-storage <storage in numbers> To delete your db-Instance \u00b6 aws rds delete-db-instance --db-instance-identifier <db - Name> --final-db-snapshot-identifier <db - Name>-final-snap S3 \u2013 Simple Storage Service \u00b6 List Buckets & Objects \u00b6 To list your buckets, folders, or objects, use the s3 ls command. Using the command without a target or options lists all buckets. aws s3 ls aws s3 ls s3://<bucket name> Create a bucket \u00b6 Use the s3 mb command to make a bucket. Bucket names must be globally unique (unique across all of Amazon S3) and should be DNS compliant. aws s3 mb s3:// <bucket name> Copy objects \u00b6 Use the s3 cp command to copy objects from a bucket or a local directory aws s3 cp <file> s3:// <bucket name> aws s3 cp s3://< source bucket/file> s3://<destination-bucket> Move objects \u00b6 Use the s3 mv command to move objects from a bucket or a local directory. aws s3 mv < local file> s3:// <bucket name> aws s3 mv s3:// < source bucket/file> s3://<destination-bucket> Sync Objects \u00b6 aws s3 sync . s3://<bucket name> Delete Objects \u00b6 aws s3 rm s3://<bucket name/file> --recursive Empty Bucket \u00b6 aws s3 rm s3://<bucket name> --recursive Delete Bucket \u00b6 aws s3 rb s3://<bucket name> VPC \u2013 Virtual Private Cloud \u00b6 To create a VPC and subnets using the AWS CLI \u00b6 Create a VPC with a 10.0.0.0/16 CIDR block using the following create-vpc command. \u00b6 aws ec2 create-vpc --cidr-block <Ip address> --query Vpc.VpcId --output text Using the VPC ID from the previous step, create a subnet with a 10.0.1.0/24 CIDR block using the following create-subnet command. \u00b6 aws ec2 create-subnet --vpc-id <vpc - Id>--cidr-block <Ip address> Create a second subnet in your VPC with a 10.0.2.0/24 CIDR block. \u00b6 aws ec2 create-subnet --vpc-id <vpc - Id>--cidr-block <Ip address> Create an internet gateway using the following create-internet-gateway command. \u00b6 aws ec2 create-internet-gateway --query InternetGateway.InternetGatewayId --output text Using the ID from the previous step, attach the internet gateway to your VPC using the following attach-internet-gateway command. \u00b6 aws ec2 attach-internet-gateway --vpc-id <vpc - Id>--internet-gateway-id <IGW - Id> Create a custom route table for your VPC using the following create-route-table command. \u00b6 aws ec2 create-route-table --vpc-id <vpc - Id>--query RouteTable.RouteTableId --output text Create a route in the route table that points all traffic (0.0.0.0/0) to the internet gateway using the following create-route command. \u00b6 aws ec2 create-route --route-table-id <route table - Id>--destination-cidr-block 0 .0.0.0/0 --gateway-id <Igw - Id> You can describe the route table using the following describe-route-tables command. \u00b6 aws ec2 describe-route-tables --route-table-id <route table - Id> The route table is currently not associated with any subnet. You need to associate it with a subnet in your VPC so that traffic from that subnet is routed to the internet gateway. \u00b6 aws ec2 describe-subnets --filters \"Name=vpc-id,Values=<vpc \u2013Id> --query \" Subnets [ * ] . { ID:SubnetId,CIDR:CidrBlock } \" You can choose which subnet to associate with the custom route table, for example, subnet-0c312202b3f26703a, and associate it using the associate-route-table command. This subnet is your public subnet. \u00b6 aws ec2 associate-route-table --subnet-id <subnet-Id> --route-table-id <route table - Id> CLEAN UP \u00b6 Delete your custom route table: \u00b6 aws ec2 delete-route-table --route-table-id <route table - Id> Delete your subnets: \u00b6 aws ec2 delete-subnet --subnet-id <subnet-Id> Detach your internet gateway from your VPC: \u00b6 aws ec2 detach-internet-gateway --internet-gateway-id <Igw -Id> --vpc-id <vpc- Id> Delete your internet gateway: \u00b6 aws ec2 delete-internet-gateway --internet-gateway-id <Igw - Id> Delete your VPC: \u00b6 aws ec2 delete-vpc --vpc-id <vpc- Id> Cloud Watch \u00b6 Creating Alarm \u00b6 aws cloudwatch put-metric-alarm --alarm-name <Alarm name> --alarm-description \"<Description>\" --metric-name <Metric> --namespace AWS/EC2 --statistic Average --period 300 --threshold < 70 > --comparison-operator <GreaterThanThreshold> --dimensions \"Name=InstanceId,Value=<Id>\" --evaluation-periods 2 --alarm-actions <SNS \u2013 arn > --unit Percent Delete Your Alarm \u00b6 aws cloudwatch delete-alarms --alarm-names <Alarm name> Disable your Alarm \u00b6 aws cloudwatch disable-alarm-actions --alarm-names <Alarm name> Enable your Alarm \u00b6 aws cloudwatch enable-alarm-actions --alarm-names <Alarm name>","title":"AWS"},{"location":"aws-cli/#aws-cli-command-line-interface","text":"","title":"AWS CLI (Command Line Interface)"},{"location":"aws-cli/#setting-up-iam-user","text":"","title":"Setting up IAM user"},{"location":"aws-cli/#creating-user-with-access-key","text":"","title":"Creating User with Access-key"},{"location":"aws-cli/#set-permissions-attaching-policies","text":"","title":"Set permissions &amp; Attaching Policies"},{"location":"aws-cli/#installing-aws-cli","text":"sudo -i sudo apt update apt install awscli -y","title":"Installing AWS-CLI"},{"location":"aws-cli/#configure-aws-cli-with-iam-user-credentials-with-specific-region","text":"aws configure Once it is done try some aws cli commands like aws s3 ls If u have any buckets in your s3 it will list","title":"Configure AWS CLI with IAM user Credentials with specific Region"},{"location":"aws-cli/#ec2-elastic-compute-cloud","text":"","title":"EC2 \u2013 Elastic Compute Cloud"},{"location":"aws-cli/#create-a-key-pair","text":"aws ec2 create-key-pair --key-name <keypair-Name> --query 'KeyMaterial' --output text > <keypair-Name.pem>","title":"Create a key pair"},{"location":"aws-cli/#delete-a-key-pair","text":"To delete a key pair, run the aws ec2 delete-key-pair command, substituting MyKeyPair with the name of the pair to delete. aws ec2 delete-key-pair --key-name <keypair-Name>","title":"Delete a key pair"},{"location":"aws-cli/#create-a-security-group-adding-inbound-rules","text":"aws ec2 create-security-group --group-name <security grp Name> --description \"<Description>\" curl https://checkip.amazonaws.com aws ec2 authorize-security-group-ingress --group-id <security group Id> --protocol tcp --port <port Number> --cidr <ip address> aws ec2 authorize-security-group-ingress --group-id <security grp Id>--protocol tcp --port 22 -8000 --cidr 0 .0.0.0/0 To view the initial information for my-sg, run the aws ec2 describe-security-groups command. For an EC2-Classic security group, you can reference it by its name. aws ec2 describe-security-groups --group-names <security grp Name>","title":"Create a Security Group &amp; Adding Inbound rules"},{"location":"aws-cli/#delete-your-security-group","text":"The following command example deletes the EC2-Classic security group named. aws ec2 delete-security-group --group-name <security grp Name>","title":"Delete your security group"},{"location":"aws-cli/#launch-instance","text":"You can use the following command to launch a t2.micro instance in EC2-Classic. Replace the italicized parameter values with your own. You can get the ami Id\u2019s from documentation or console for your required Instance. aws ec2 run-instances --image-id <ami-Id> --count 1 --instance-type <type> --key-name <keypair-Name> --security-groups <security grp Name>","title":"Launch Instance"},{"location":"aws-cli/#add-a-tag-to-your-instance","text":"aws ec2 create-tags --resources <Instance-Id>--tags Key = Name,Value = <value>","title":"Add a tag to your Instance"},{"location":"aws-cli/#terminate-your-instance","text":"To delete an instance, you use the command aws ec2 terminate-instances to delete it. aws ec2 terminate-instances --instance-ids <Instance-Id>","title":"Terminate your Instance"},{"location":"aws-cli/#create-launch-template","text":"aws ec2 create-launch-template --launch-template-name <Name> \":[{\" AssociatePublicIpAddress \":true,\" DeviceIndex \":0,\" Ipv6AddressCount \":1,\" SubnetId \":\" pe \":\" <Instance type \",\" TagSpecifications \":[{\" ResourceType \":\" instance \",\" Tags \":[{\" Key \":\" Name \",\" Value \":\" <value> \"}]}]}'","title":"Create Launch Template"},{"location":"aws-cli/#delete-launch-template","text":"aws ec2 delete-launch-template --launch-template-id < template id> --region <region>","title":"Delete Launch Template"},{"location":"aws-cli/#creating-auto-scaling-group","text":"aws autoscaling create-auto-scaling-group --auto-scaling-group-name <Name> --launch-LaunchTemplateId = <template \u2013 id > --min-size 2 --max-size 5 --vpc-zone-identifier \"subnet1-id,subnet2-id,subnet3-id\"","title":"Creating Auto-Scaling group"},{"location":"aws-cli/#delete-your-auto-scaling-group","text":"aws autoscaling delete-auto-scaling-group --auto-scaling-group-name < Auto -Scaling group Name >","title":"Delete your Auto-Scaling Group"},{"location":"aws-cli/#ebs-elastic-block-storage","text":"","title":"EBS \u2013 Elastic Block Storage"},{"location":"aws-cli/#create-ebs-volume","text":"To create an empty General Purpose SSD (gp2) volume aws ec2 create-volume --volume-type <volume type> --size <size in number> --availability-zone <zone>","title":"Create EBS Volume"},{"location":"aws-cli/#to-create-an-encrypted-volume","text":"aws ec2 create-volume --volume-type <volume type> --size <size in number> --encrypted --availability-zone <zone>","title":"To create an encrypted volume"},{"location":"aws-cli/#to-create-a-volume-with-tags","text":"aws ec2 create-tags --resources <volume-id> --tags Key = Name,Value = <value>","title":"To create a volume with tags"},{"location":"aws-cli/#to-delete-a-volume","text":"aws ec2 delete-volume --volume-id <volume Id> Output Output: None","title":"To Delete a Volume"},{"location":"aws-cli/#to-create-a-snapshot","text":"This example command creates a snapshot of the volume with a volume ID of and a short description to identify the snapshot. aws ec2 create-snapshot --volume-id <volume Id> --description \"<Description>\"","title":"To create a snapshot"},{"location":"aws-cli/#to-create-a-snapshot-with-tags","text":"aws ec2 create-snapshot --volume-id <volume Id> --description 'Prod backup' --tag-specifications 'ResourceType=snapshot,Tags=[{Key=Name,Value=<value>},{Key=Database,Value=Mysql}]'","title":"To create a snapshot with tags"},{"location":"aws-cli/#to-allocate-an-elastic-ip-address-for-ec2-classic","text":"The following allocate-address example allocates an Elastic IP address to use with an instance in EC2-Classic. aws ec2 allocate-address","title":"To allocate an Elastic IP address for EC2-Classic"},{"location":"aws-cli/#elb-elastic-load-balancer","text":"","title":"ELB \u2013 Elastic Load Balancer"},{"location":"aws-cli/#create-load-balancer","text":"","title":"Create-load-balancer"},{"location":"aws-cli/#to-create-an-application-load-balancer","text":"The below commands to find subnet id & Instance Id aws ec2 describe-subnets aws ec2 describe-instances aws elbv2 create-load-balancer --name <Load balancer Name>--type <type> --subnets <subnet-Id> <subnet-Id>","title":"To create an Application load balancer"},{"location":"aws-cli/#to-create-an-network-load-balancer","text":"aws elbv2 create-load-balancer --name <Load balancer Name>--type <type> --subnets <subnet-Id>","title":"To create an Network load balancer"},{"location":"aws-cli/#to-register-instances-with-a-load-balancer","text":"aws elb register-instances-with-load-balancer --load-balancer-name <Load balancer Name> --instances <Instance-Id>","title":"To register instances with a load balancer"},{"location":"aws-cli/#to-delete-a-specific-load-balancer","text":"aws elbv2 delete-load-balancer --load-balancer-arn <arn end point>","title":"To Delete a Specific Load balancer"},{"location":"aws-cli/#rds-relational-database-service","text":"","title":"RDS - Relational Database Service"},{"location":"aws-cli/#create-db-instance","text":"aws rds create-db-instance --db-instance-identifier <db - Name> --db-instance-class <db.type> --engine <Database Engine> --master-username <username> --master-user-password <password> --allocated-storage <storage in numbers>","title":"Create-db-Instance"},{"location":"aws-cli/#to-delete-your-db-instance","text":"aws rds delete-db-instance --db-instance-identifier <db - Name> --final-db-snapshot-identifier <db - Name>-final-snap","title":"To delete your db-Instance"},{"location":"aws-cli/#s3-simple-storage-service","text":"","title":"S3 \u2013 Simple Storage Service"},{"location":"aws-cli/#list-buckets-objects","text":"To list your buckets, folders, or objects, use the s3 ls command. Using the command without a target or options lists all buckets. aws s3 ls aws s3 ls s3://<bucket name>","title":"List Buckets &amp; Objects"},{"location":"aws-cli/#create-a-bucket","text":"Use the s3 mb command to make a bucket. Bucket names must be globally unique (unique across all of Amazon S3) and should be DNS compliant. aws s3 mb s3:// <bucket name>","title":"Create a bucket"},{"location":"aws-cli/#copy-objects","text":"Use the s3 cp command to copy objects from a bucket or a local directory aws s3 cp <file> s3:// <bucket name> aws s3 cp s3://< source bucket/file> s3://<destination-bucket>","title":"Copy objects"},{"location":"aws-cli/#move-objects","text":"Use the s3 mv command to move objects from a bucket or a local directory. aws s3 mv < local file> s3:// <bucket name> aws s3 mv s3:// < source bucket/file> s3://<destination-bucket>","title":"Move objects"},{"location":"aws-cli/#sync-objects","text":"aws s3 sync . s3://<bucket name>","title":"Sync Objects"},{"location":"aws-cli/#delete-objects","text":"aws s3 rm s3://<bucket name/file> --recursive","title":"Delete Objects"},{"location":"aws-cli/#empty-bucket","text":"aws s3 rm s3://<bucket name> --recursive","title":"Empty Bucket"},{"location":"aws-cli/#delete-bucket","text":"aws s3 rb s3://<bucket name>","title":"Delete Bucket"},{"location":"aws-cli/#vpc-virtual-private-cloud","text":"","title":"VPC \u2013 Virtual Private Cloud"},{"location":"aws-cli/#to-create-a-vpc-and-subnets-using-the-aws-cli","text":"","title":"To create a VPC and subnets using the AWS CLI"},{"location":"aws-cli/#create-a-vpc-with-a-1000016-cidr-block-using-the-following-create-vpc-command","text":"aws ec2 create-vpc --cidr-block <Ip address> --query Vpc.VpcId --output text","title":"Create a VPC with a 10.0.0.0/16 CIDR block using the following create-vpc command."},{"location":"aws-cli/#using-the-vpc-id-from-the-previous-step-create-a-subnet-with-a-1001024-cidr-block-using-the-following-create-subnet-command","text":"aws ec2 create-subnet --vpc-id <vpc - Id>--cidr-block <Ip address>","title":"Using the VPC ID from the previous step, create a subnet with a 10.0.1.0/24 CIDR block using the following create-subnet command."},{"location":"aws-cli/#create-a-second-subnet-in-your-vpc-with-a-1002024-cidr-block","text":"aws ec2 create-subnet --vpc-id <vpc - Id>--cidr-block <Ip address>","title":"Create a second subnet in your VPC with a 10.0.2.0/24 CIDR block."},{"location":"aws-cli/#create-an-internet-gateway-using-the-following-create-internet-gateway-command","text":"aws ec2 create-internet-gateway --query InternetGateway.InternetGatewayId --output text","title":"Create an internet gateway using the following create-internet-gateway command."},{"location":"aws-cli/#using-the-id-from-the-previous-step-attach-the-internet-gateway-to-your-vpc-using-the-following-attach-internet-gateway-command","text":"aws ec2 attach-internet-gateway --vpc-id <vpc - Id>--internet-gateway-id <IGW - Id>","title":"Using the ID from the previous step, attach the internet gateway to your VPC using the following attach-internet-gateway command."},{"location":"aws-cli/#create-a-custom-route-table-for-your-vpc-using-the-following-create-route-table-command","text":"aws ec2 create-route-table --vpc-id <vpc - Id>--query RouteTable.RouteTableId --output text","title":"Create a custom route table for your VPC using the following create-route-table command."},{"location":"aws-cli/#create-a-route-in-the-route-table-that-points-all-traffic-00000-to-the-internet-gateway-using-the-following-create-route-command","text":"aws ec2 create-route --route-table-id <route table - Id>--destination-cidr-block 0 .0.0.0/0 --gateway-id <Igw - Id>","title":"Create a route in the route table that points all traffic (0.0.0.0/0) to the internet gateway using the following create-route command."},{"location":"aws-cli/#you-can-describe-the-route-table-using-the-following-describe-route-tables-command","text":"aws ec2 describe-route-tables --route-table-id <route table - Id>","title":"You can describe the route table using the following describe-route-tables command."},{"location":"aws-cli/#the-route-table-is-currently-not-associated-with-any-subnet-you-need-to-associate-it-with-a-subnet-in-your-vpc-so-that-traffic-from-that-subnet-is-routed-to-the-internet-gateway","text":"aws ec2 describe-subnets --filters \"Name=vpc-id,Values=<vpc \u2013Id> --query \" Subnets [ * ] . { ID:SubnetId,CIDR:CidrBlock } \"","title":"The route table is currently not associated with any subnet. You need to associate it with a subnet in your VPC so that traffic from that subnet is routed to the internet gateway."},{"location":"aws-cli/#you-can-choose-which-subnet-to-associate-with-the-custom-route-table-for-example-subnet-0c312202b3f26703a-and-associate-it-using-the-associate-route-table-command-this-subnet-is-your-public-subnet","text":"aws ec2 associate-route-table --subnet-id <subnet-Id> --route-table-id <route table - Id>","title":"You can choose which subnet to associate with the custom route table, for example, subnet-0c312202b3f26703a, and associate it using the associate-route-table command. This subnet is your public subnet."},{"location":"aws-cli/#clean-up","text":"","title":"CLEAN UP"},{"location":"aws-cli/#delete-your-custom-route-table","text":"aws ec2 delete-route-table --route-table-id <route table - Id>","title":"Delete your custom route table:"},{"location":"aws-cli/#delete-your-subnets","text":"aws ec2 delete-subnet --subnet-id <subnet-Id>","title":"Delete your subnets:"},{"location":"aws-cli/#detach-your-internet-gateway-from-your-vpc","text":"aws ec2 detach-internet-gateway --internet-gateway-id <Igw -Id> --vpc-id <vpc- Id>","title":"Detach your internet gateway from your VPC:"},{"location":"aws-cli/#delete-your-internet-gateway","text":"aws ec2 delete-internet-gateway --internet-gateway-id <Igw - Id>","title":"Delete your internet gateway:"},{"location":"aws-cli/#delete-your-vpc","text":"aws ec2 delete-vpc --vpc-id <vpc- Id>","title":"Delete your VPC:"},{"location":"aws-cli/#cloud-watch","text":"","title":"Cloud Watch"},{"location":"aws-cli/#creating-alarm","text":"aws cloudwatch put-metric-alarm --alarm-name <Alarm name> --alarm-description \"<Description>\" --metric-name <Metric> --namespace AWS/EC2 --statistic Average --period 300 --threshold < 70 > --comparison-operator <GreaterThanThreshold> --dimensions \"Name=InstanceId,Value=<Id>\" --evaluation-periods 2 --alarm-actions <SNS \u2013 arn > --unit Percent","title":"Creating Alarm"},{"location":"aws-cli/#delete-your-alarm","text":"aws cloudwatch delete-alarms --alarm-names <Alarm name>","title":"Delete Your Alarm"},{"location":"aws-cli/#disable-your-alarm","text":"aws cloudwatch disable-alarm-actions --alarm-names <Alarm name>","title":"Disable your Alarm"},{"location":"aws-cli/#enable-your-alarm","text":"aws cloudwatch enable-alarm-actions --alarm-names <Alarm name>","title":"Enable your Alarm"},{"location":"docker-setup/","text":"Install Docker Engine on Ubuntu & CentOS with Docker-Compose \u00b6 Docker Setup Create a file name docker_setup.sh and copy the below script vim docker_setup.sh #!/bin/bash apt --help >>/dev/null if [ $? -eq 0 ] then echo \" INSTALLING DOCKER IN UBUNTU\" echo sudo apt update sudo apt-get remove docker docker-engine docker.io containerd runc sudo apt-get update sudo apt-get -y install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg \\ lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io -y sudo docker run hello-world else echo \" INSTALLING DOCKER IN CENTOS\" echo sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine sudo yum install -y yum-utils sudo yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo sudo yum install docker-ce docker-ce-cli containerd.io -y sudo systemctl start docker sudo docker run hello-world fi echo \" Installing Docker Compose\" sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose docker-compose --version Give Execute permission for script sudo chmod +x docker_setup.sh Now run the Script ./docker_setup.sh Docker Commands \u00b6 Docker Images List all images that are locally stored with the Docker Engine docker image ls Build an image from the Dockerfile in the current directory and tag the image docker build -t <imagename>:<tag> Delete an image from the local image store docker image rm <imagename>:<tag> Containers Run a container in interactive mode: docker run -it <imagename>:<tag> Run a container from the Image nginx:latest, name the running container \u201cweb\u201d and expose port 5000 externally, mapped to port 80 inside the container in detached mode. docker run --name web -d -p 5000 :80 nginx:latest Run a detached container in a previously created container network: docker network create <mynetwork> docker run --name web -d --net mynetwork -p 5000 :80 nginx:latest Follow the logs of a specific container: docker logs -f <container name or container container-id> List only active containers docker ps List all containers docker ps -a Stop a container docker stop <container name or container container-id> Stop a container (timeout = 1 second) docker stop -t1 Remove a stopped container docker rm <container name or container container-id> Force stop and remove a container docker rm -f <container name or container container-id> Remove all containers docker rm -f $( docker ps-aq ) Remove all stopped containers docker rm $( docker ps -q -f \u201cstatus = exited\u201d ) Execute a new process in an existing container:Execute and access bash inside a container docker exec -it <container name or container-id> bash To inspect the container docker inspect <container name or container container-id> Share To Establish Connection from local to Remote. login with your Dockerhub Credentials. docker login Pull an image from a registry docker pull <imagename>:<tag> Retag a local image with a new image name and tag docker tag myimage:1.0 myrepo/myimage:2.0 Push an image to a registry. docker push myrepo/myimage:2.0 Dockerfile Sample Dockerfile for Deploying a Staticwebsite. vim Dockerfile FROM centos:latest LABEL \"Author\" = \"saiteja\" LABEL \"Project\" = \"Wave\" RUN yum install httpd wget unzip -y RUN wget https://www.tooplate.com/zip-templates/2121_wave_cafe.zip RUN unzip 2121_wave_cafe.zip RUN cp -r 2121_wave_cafe/* /var/www/html/ CMD [ \"/usr/sbin/httpd\" , \"-D\" , \"FOREGROUND\" ] EXPOSE 80 WORKDIR /var/www/html VOLUME /var/log/httpd Build the image from the Docker file , Here Change my Name with your registery name and Image. docker build -t saitejairrinki/wavecafe:v1 . Run Container From the Image docker run --name wavecafe -d -p 9699 :80 saitejairrinki/wavecafe:v1 Now Access From the Browser, Make sure you have to allow the portnumber in my case 9699 in your security group if you are using cloud VM. Public-IPaddress:9699 Docker Image You can pull my image and you can also run container from my image without creating Dockerfile. docker pull saitejairrinki/wavecafe:v1 docker run --name wavecafe -d -p 9999 :80 saitejairrinki/wavecafe:v1 Now Access From the Browser, Make sure you have to allow the portnumber in my case 9999 in your security group if you are using cloud VM. Public-IPaddress:9999","title":"Docker"},{"location":"docker-setup/#install-docker-engine-on-ubuntu-centos-with-docker-compose","text":"Docker Setup Create a file name docker_setup.sh and copy the below script vim docker_setup.sh #!/bin/bash apt --help >>/dev/null if [ $? -eq 0 ] then echo \" INSTALLING DOCKER IN UBUNTU\" echo sudo apt update sudo apt-get remove docker docker-engine docker.io containerd runc sudo apt-get update sudo apt-get -y install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg \\ lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io -y sudo docker run hello-world else echo \" INSTALLING DOCKER IN CENTOS\" echo sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine sudo yum install -y yum-utils sudo yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo sudo yum install docker-ce docker-ce-cli containerd.io -y sudo systemctl start docker sudo docker run hello-world fi echo \" Installing Docker Compose\" sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose docker-compose --version Give Execute permission for script sudo chmod +x docker_setup.sh Now run the Script ./docker_setup.sh","title":"Install Docker Engine on Ubuntu &amp; CentOS with Docker-Compose"},{"location":"docker-setup/#docker-commands","text":"Docker Images List all images that are locally stored with the Docker Engine docker image ls Build an image from the Dockerfile in the current directory and tag the image docker build -t <imagename>:<tag> Delete an image from the local image store docker image rm <imagename>:<tag> Containers Run a container in interactive mode: docker run -it <imagename>:<tag> Run a container from the Image nginx:latest, name the running container \u201cweb\u201d and expose port 5000 externally, mapped to port 80 inside the container in detached mode. docker run --name web -d -p 5000 :80 nginx:latest Run a detached container in a previously created container network: docker network create <mynetwork> docker run --name web -d --net mynetwork -p 5000 :80 nginx:latest Follow the logs of a specific container: docker logs -f <container name or container container-id> List only active containers docker ps List all containers docker ps -a Stop a container docker stop <container name or container container-id> Stop a container (timeout = 1 second) docker stop -t1 Remove a stopped container docker rm <container name or container container-id> Force stop and remove a container docker rm -f <container name or container container-id> Remove all containers docker rm -f $( docker ps-aq ) Remove all stopped containers docker rm $( docker ps -q -f \u201cstatus = exited\u201d ) Execute a new process in an existing container:Execute and access bash inside a container docker exec -it <container name or container-id> bash To inspect the container docker inspect <container name or container container-id> Share To Establish Connection from local to Remote. login with your Dockerhub Credentials. docker login Pull an image from a registry docker pull <imagename>:<tag> Retag a local image with a new image name and tag docker tag myimage:1.0 myrepo/myimage:2.0 Push an image to a registry. docker push myrepo/myimage:2.0 Dockerfile Sample Dockerfile for Deploying a Staticwebsite. vim Dockerfile FROM centos:latest LABEL \"Author\" = \"saiteja\" LABEL \"Project\" = \"Wave\" RUN yum install httpd wget unzip -y RUN wget https://www.tooplate.com/zip-templates/2121_wave_cafe.zip RUN unzip 2121_wave_cafe.zip RUN cp -r 2121_wave_cafe/* /var/www/html/ CMD [ \"/usr/sbin/httpd\" , \"-D\" , \"FOREGROUND\" ] EXPOSE 80 WORKDIR /var/www/html VOLUME /var/log/httpd Build the image from the Docker file , Here Change my Name with your registery name and Image. docker build -t saitejairrinki/wavecafe:v1 . Run Container From the Image docker run --name wavecafe -d -p 9699 :80 saitejairrinki/wavecafe:v1 Now Access From the Browser, Make sure you have to allow the portnumber in my case 9699 in your security group if you are using cloud VM. Public-IPaddress:9699 Docker Image You can pull my image and you can also run container from my image without creating Dockerfile. docker pull saitejairrinki/wavecafe:v1 docker run --name wavecafe -d -p 9999 :80 saitejairrinki/wavecafe:v1 Now Access From the Browser, Make sure you have to allow the portnumber in my case 9999 in your security group if you are using cloud VM. Public-IPaddress:9999","title":"Docker Commands"},{"location":"git/","text":"Git Cheat Sheet \u00b6 GIT BASICS Command Usage git init <directory> Create empty Git repo in specified directory. Run with no arguments to initialize the current directory as a git repository. git clone <repo> Clone repo located at <repo> onto local machine. Original repo can be located on the local filesystem or on a remote machine via HTTP or SSH. git config user.name <name> Define author name to be used for all commits in current repo. Devs commonly use --global flag to set config options for current user. git add <directory> Stage all changes in <directory> for the next commit. Replace <directory> with a <file> to change a specific file.","title":"GIT"},{"location":"git/#git-cheat-sheet","text":"GIT BASICS Command Usage git init <directory> Create empty Git repo in specified directory. Run with no arguments to initialize the current directory as a git repository. git clone <repo> Clone repo located at <repo> onto local machine. Original repo can be located on the local filesystem or on a remote machine via HTTP or SSH. git config user.name <name> Define author name to be used for all commits in current repo. Devs commonly use --global flag to set config options for current user. git add <directory> Stage all changes in <directory> for the next commit. Replace <directory> with a <file> to change a specific file.","title":"Git Cheat Sheet"},{"location":"kops/","text":"Creating Kubernetes Cluster with KOPS \u00b6 Install AWS CLI apt update && apt install awscli -y Configure AWS CLI with IAM user Credentials with specific Region aws configure Note If you are using AWS Instance better to use IAM Role than Creating User with Access-key Check Whether AWS CLI Commands Working or not aws s3 ls Generate SSH Keys ssh-keygen Install kubectl binary with curl on Linux \u00b6 Download the latest release with the command: curl -LO \"https://dl.k8s.io/release/ $( curl -L -s https://dl.k8s.io/release/stable.txt ) /bin/linux/amd64/kubectl\" Install kubectl sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl kubectl version --client Installing Kubernetes with kops \u00b6 Download the latest release with the command: curl -LO https://github.com/kubernetes/kops/releases/download/ $( curl -s https://api.github.com/repos/kubernetes/kops/releases/lates | grep tag_name | cut -d '\"' -f 4 ) /kops-linux-amd64 Make the kops binary executable chmod +x kops-linux-amd64 Move the kops binary in to your PATH. sudo mv kops-linux-amd64 /usr/local/bin/kops kops Creating K8s Cluster with KOPS \u00b6 Kops commands to setup k8s cluster:- \u00b6 kops create cluster --name = saiteja.irrinki.xyz --state = s3://k8s-buckett --zone = eu-west-3a,eu-west-3b --node-count = 2 \u2013node-size = t2.micro --master- size = t2.micro --dns-zone = saiteja.irrinki.xyz --node-volume-size = 8 --master-volume-size = 8 It will create configuration of kops kops update cluster --name = saiteja.irrinki.xyz -- state = s3://k8s-bucket --yes --admin It will create kopsdata in S3 bucket. It start creating a cluster & it takes 10 mins kops validate cluster -- name = saiteja . irrinki . xyz -- state = s3 : //k8s-bucket It shows ur cluster is ready To Delete Cluster kops delete cluster -- name = saiteja . irrinki . xyz -- state = s3 : //k8s-bucket --yes","title":"Kubernetes"},{"location":"kops/#creating-kubernetes-cluster-with-kops","text":"Install AWS CLI apt update && apt install awscli -y Configure AWS CLI with IAM user Credentials with specific Region aws configure Note If you are using AWS Instance better to use IAM Role than Creating User with Access-key Check Whether AWS CLI Commands Working or not aws s3 ls Generate SSH Keys ssh-keygen","title":"Creating Kubernetes Cluster with KOPS"},{"location":"kops/#install-kubectl-binary-with-curl-on-linux","text":"Download the latest release with the command: curl -LO \"https://dl.k8s.io/release/ $( curl -L -s https://dl.k8s.io/release/stable.txt ) /bin/linux/amd64/kubectl\" Install kubectl sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl kubectl version --client","title":"Install kubectl binary with curl on Linux"},{"location":"kops/#installing-kubernetes-with-kops","text":"Download the latest release with the command: curl -LO https://github.com/kubernetes/kops/releases/download/ $( curl -s https://api.github.com/repos/kubernetes/kops/releases/lates | grep tag_name | cut -d '\"' -f 4 ) /kops-linux-amd64 Make the kops binary executable chmod +x kops-linux-amd64 Move the kops binary in to your PATH. sudo mv kops-linux-amd64 /usr/local/bin/kops kops","title":"Installing Kubernetes with kops"},{"location":"kops/#creating-k8s-cluster-with-kops","text":"","title":"Creating K8s Cluster with KOPS"},{"location":"kops/#kops-commands-to-setup-k8s-cluster-","text":"kops create cluster --name = saiteja.irrinki.xyz --state = s3://k8s-buckett --zone = eu-west-3a,eu-west-3b --node-count = 2 \u2013node-size = t2.micro --master- size = t2.micro --dns-zone = saiteja.irrinki.xyz --node-volume-size = 8 --master-volume-size = 8 It will create configuration of kops kops update cluster --name = saiteja.irrinki.xyz -- state = s3://k8s-bucket --yes --admin It will create kopsdata in S3 bucket. It start creating a cluster & it takes 10 mins kops validate cluster -- name = saiteja . irrinki . xyz -- state = s3 : //k8s-bucket It shows ur cluster is ready To Delete Cluster kops delete cluster -- name = saiteja . irrinki . xyz -- state = s3 : //k8s-bucket --yes","title":"Kops commands to setup k8s cluster:-"}]}